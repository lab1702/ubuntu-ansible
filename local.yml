---
- hosts: localhost
  connection: local
  become: true

  tasks:
  # - name: Show facts available on the system
  #   debug:
  #     var: ansible_facts

  - name: add cran repo key
    get_url:
      url: 'https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc'
      dest: '/etc/apt/keyrings/cran_ubuntu_key.asc'
    when: cran is defined and cran != ''

  - name: add cran repo url
    apt_repository:
      repo: 'deb [signed-by=/etc/apt/keyrings/cran_ubuntu_key.asc] https://cloud.r-project.org/bin/linux/ubuntu {{ansible_facts.distribution_release}}-cran40/'
      state: present
    when: cran is defined and cran != ''

  - name: update installed packages
    apt:
      name: "*"
      state: latest
      update_cache: true

  - name: install packages
    apt:
      pkg:
        - linux-tools-common
        - docker.io
        - docker-buildx
        - docker-compose-v2
        - build-essential
        - fonts-cascadia-code
        - fonts-firacode
        - git
        - cmake
        - ccache
        - curl
        - wget
        - jq
        - gnuplot
        - graphviz
        - r-base
        - r-base-dev
        - libopenblas-dev
        - pandoc
        - libxml2-dev
        - libcurl4-openssl-dev
        - libssl-dev
        - libx11-dev
        - libglu1-mesa-dev
        - libftgl-dev
        - libfontconfig1-dev
        - libcairo2-dev
        - libgsl-dev
        - libudunits2-dev
        - libgdal-dev
        - libmpfr-dev
        - libgmp-dev
        - libharfbuzz-dev
        - libfribidi-dev
        - libv8-dev
        - libunwind-dev
        - libarchive-dev
        - libsodium-dev
        - libsecret-1-dev
        - libgit2-dev
        - libmagick++-dev
        - unixodbc-dev
        - tdsodbc
        - python3-venv
        - python3-virtualenv
        - rust-all
        - gnucobol
        - hexyl
        - bvi
        - vim
        - sloccount
        - tmux
        - multitail
        - ispell
        - ripgrep
        - fd-find
        - fzf
        - tree
        - gdu
        - neofetch
        - cpufetch
        - figlet
        - dos2unix
        - htop
        - btop
        - nvtop
        - s-tui
        - stress
        - atop
        - iftop
        - iotop-c
        - glances
      state: present
      update_cache: true

  - name: autoremove packages
    apt:
      autoremove: yes
      update_cache: true

  - name: autoclean packages
    apt:
      autoclean: yes
      update_cache: true
      
  - name: install classic snaps
    snap:
      classic: yes
      name:
        - go
        - powershell

  - name: delete old duckdb install script if it exists
    command: rm -f /tmp/duckdb_install.sh

  - name: download latest duckdb install script
    get_url:
      url: https://install.duckdb.org
      dest: /tmp/duckdb_install.sh
      mode: '0755'

  - name: run latest duckdb install script
    command: /tmp/duckdb_install.sh

  - name: remove latest duckdb install script
    command: rm -f /tmp/duckdb_install.sh

  - name: remove old duckdb binary from /usr/local/bin
    command: rm -f /usr/local/bin/duckdb

  - name: copy latest duckdb binary from /root installation to /usr/local/bin
    copy:
      src: /root/.duckdb/cli/latest/duckdb
      dest: /usr/local/bin/duckdb
      mode: '0755'
      remote_src: yes

  - name: remove duckdb /root installation
    command: rm -rf /root/.duckdb

  - name: add user to groups
    user:
      name: "{{ host_user }}"
      groups:
        - docker
      append: yes
